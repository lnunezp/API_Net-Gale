#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace API.Endpoints.Case.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="BD_Base")]
	public partial class caseDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definiciones de métodos de extensibilidad
    partial void OnCreated();
    partial void InsertDATACASE(DATACASE instance);
    partial void UpdateDATACASE(DATACASE instance);
    partial void DeleteDATACASE(DATACASE instance);
    #endregion
		
		public caseDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["BD_BaseConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public caseDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public caseDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public caseDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public caseDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<CREATECASE> CREATECASE
		{
			get
			{
				return this.GetTable<CREATECASE>();
			}
		}
		
		public System.Data.Linq.Table<DATACASE> DATACASE
		{
			get
			{
				return this.GetTable<DATACASE>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class CREATECASE
	{
		
		private string _INDENTIFIER;
		
		private string _DESCRIPTION;
		
		private int _VALUE;
		
		private System.Guid _CLIETOKEN;
		
		private string _ATTOTOKEN;
		
		public CREATECASE()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="IDENTIFICADOR", Storage="_INDENTIFIER", CanBeNull=false)]
		public string INDENTIFIER
		{
			get
			{
				return this._INDENTIFIER;
			}
			set
			{
				if ((this._INDENTIFIER != value))
				{
					this._INDENTIFIER = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="DESCRIPCION", Storage="_DESCRIPTION", CanBeNull=false)]
		public string DESCRIPTION
		{
			get
			{
				return this._DESCRIPTION;
			}
			set
			{
				if ((this._DESCRIPTION != value))
				{
					this._DESCRIPTION = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="MONTO", Storage="_VALUE")]
		public int VALUE
		{
			get
			{
				return this._VALUE;
			}
			set
			{
				if ((this._VALUE != value))
				{
					this._VALUE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="CLI_TOKEN", Storage="_CLIETOKEN")]
		public System.Guid CLIETOKEN
		{
			get
			{
				return this._CLIETOKEN;
			}
			set
			{
				if ((this._CLIETOKEN != value))
				{
					this._CLIETOKEN = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="ABOG_TOKEN", Storage="_ATTOTOKEN", CanBeNull=false)]
		public string ATTOTOKEN
		{
			get
			{
				return this._ATTOTOKEN;
			}
			set
			{
				if ((this._ATTOTOKEN != value))
				{
					this._ATTOTOKEN = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.V_CASO")]
	public partial class DATACASE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CODE;
		
		private string _DESCRIPTIONS;
		
		private System.Nullable<int> _VALUE;
		
		private System.Nullable<int> _BALANCE;
		
		private System.Nullable<System.Guid> _TOKEN;
		
		private System.Nullable<System.DateTime> _DATE;
		
		private System.Nullable<int> _CLIECODE;
		
		private System.Guid _CLIETOKEN;
		
		private string _NAME;
		
		private string _LASTNAME;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCODEChanging(int value);
    partial void OnCODEChanged();
    partial void OnDESCRIPTIONSChanging(string value);
    partial void OnDESCRIPTIONSChanged();
    partial void OnVALUEChanging(System.Nullable<int> value);
    partial void OnVALUEChanged();
    partial void OnBALANCEChanging(System.Nullable<int> value);
    partial void OnBALANCEChanged();
    partial void OnTOKENChanging(System.Nullable<System.Guid> value);
    partial void OnTOKENChanged();
    partial void OnDATEChanging(System.Nullable<System.DateTime> value);
    partial void OnDATEChanged();
    partial void OnCLIECODEChanging(System.Nullable<int> value);
    partial void OnCLIECODEChanged();
    partial void OnCLIETOKENChanging(System.Guid value);
    partial void OnCLIETOKENChanged();
    partial void OnNAMEChanging(string value);
    partial void OnNAMEChanged();
    partial void OnLASTNAMEChanging(string value);
    partial void OnLASTNAMEChanged();
    #endregion
		
		public DATACASE()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="CASO_CODIGO", Storage="_CODE", DbType="Int NOT NULL")]
		public int CODE
		{
			get
			{
				return this._CODE;
			}
			set
			{
				if ((this._CODE != value))
				{
					this.OnCODEChanging(value);
					this.SendPropertyChanging();
					this._CODE = value;
					this.SendPropertyChanged("CODE");
					this.OnCODEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="CASO_DESCRIPCION", Storage="_DESCRIPTIONS", DbType="VarChar(100)")]
		public string DESCRIPTIONS
		{
			get
			{
				return this._DESCRIPTIONS;
			}
			set
			{
				if ((this._DESCRIPTIONS != value))
				{
					this.OnDESCRIPTIONSChanging(value);
					this.SendPropertyChanging();
					this._DESCRIPTIONS = value;
					this.SendPropertyChanged("DESCRIPTIONS");
					this.OnDESCRIPTIONSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="CASO_MONTO", Storage="_VALUE", DbType="Int")]
		public System.Nullable<int> VALUE
		{
			get
			{
				return this._VALUE;
			}
			set
			{
				if ((this._VALUE != value))
				{
					this.OnVALUEChanging(value);
					this.SendPropertyChanging();
					this._VALUE = value;
					this.SendPropertyChanged("VALUE");
					this.OnVALUEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="CASO_SALDO", Storage="_BALANCE", DbType="Int")]
		public System.Nullable<int> BALANCE
		{
			get
			{
				return this._BALANCE;
			}
			set
			{
				if ((this._BALANCE != value))
				{
					this.OnBALANCEChanging(value);
					this.SendPropertyChanging();
					this._BALANCE = value;
					this.SendPropertyChanged("BALANCE");
					this.OnBALANCEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="CASO_TOKEN", Storage="_TOKEN", DbType="UniqueIdentifier", IsPrimaryKey=true)]
		public System.Nullable<System.Guid> TOKEN
		{
			get
			{
				return this._TOKEN;
			}
			set
			{
				if ((this._TOKEN != value))
				{
					this.OnTOKENChanging(value);
					this.SendPropertyChanging();
					this._TOKEN = value;
					this.SendPropertyChanged("TOKEN");
					this.OnTOKENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="CASO_FECHA", Storage="_DATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> DATE
		{
			get
			{
				return this._DATE;
			}
			set
			{
				if ((this._DATE != value))
				{
					this.OnDATEChanging(value);
					this.SendPropertyChanging();
					this._DATE = value;
					this.SendPropertyChanged("DATE");
					this.OnDATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="CASO_CLIE_CODIGO", Storage="_CLIECODE", DbType="Int")]
		public System.Nullable<int> CLIECODE
		{
			get
			{
				return this._CLIECODE;
			}
			set
			{
				if ((this._CLIECODE != value))
				{
					this.OnCLIECODEChanging(value);
					this.SendPropertyChanging();
					this._CLIECODE = value;
					this.SendPropertyChanged("CLIECODE");
					this.OnCLIECODEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="CLIE_TOKEN", Storage="_CLIETOKEN", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid CLIETOKEN
		{
			get
			{
				return this._CLIETOKEN;
			}
			set
			{
				if ((this._CLIETOKEN != value))
				{
					this.OnCLIETOKENChanging(value);
					this.SendPropertyChanging();
					this._CLIETOKEN = value;
					this.SendPropertyChanged("CLIETOKEN");
					this.OnCLIETOKENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="ABOG_NOMBRE", Storage="_NAME", CanBeNull=false)]
		public string NAME
		{
			get
			{
				return this._NAME;
			}
			set
			{
				if ((this._NAME != value))
				{
					this.OnNAMEChanging(value);
					this.SendPropertyChanging();
					this._NAME = value;
					this.SendPropertyChanged("NAME");
					this.OnNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="ABOG_APELLIDOS", Storage="_LASTNAME", CanBeNull=false)]
		public string LASTNAME
		{
			get
			{
				return this._LASTNAME;
			}
			set
			{
				if ((this._LASTNAME != value))
				{
					this.OnLASTNAMEChanging(value);
					this.SendPropertyChanging();
					this._LASTNAME = value;
					this.SendPropertyChanged("LASTNAME");
					this.OnLASTNAMEChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
